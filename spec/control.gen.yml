# GENERATED FILE DO NOT EDIT
openapi: 3.0.2
info:
  description: API for the SCION Control Service
  title: Control Service API
  version: 0.0.1
servers:
  - url: 'http://{host}:{port}'
    variables:
      host:
        default: localhost
      port:
        default: '30452'
tags:
  - name: common
    description: Common API exposed by SCION services.
  - name: crypto
    description: API related to SCION cryptography.
paths:
  /signer:
    get:
      tags:
        - crypto
      summary: >-
        Prints information about the AS Certificate used to sign the
        control-plane message.
      operationId: get-signer
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Signer'
        '400':
          $ref: '#/components/responses/BadRequest'
  /ca:
    get:
      tags:
        - crypto
      summary: Information about the CA.
      operationId: get-ca
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CA'
        '400':
          $ref: '#/components/responses/BadRequest'
  /info:
    get:
      tags:
        - common
      summary: Basic information page about the control service process.
      operationId: get-info
      responses:
        '200':
          description: Successful Operation
          content:
            text/plain:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/BadRequest'
  /log/level:
    get:
      tags:
        - common
      summary: Get logging level
      operationId: get-log-level
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogLevel'
        '400':
          $ref: '#/components/responses/BadRequest'
    put:
      tags:
        - common
      summary: Set logging level
      operationId: set-log-level
      requestBody:
        description: Logging Level
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogLevel'
        required: true
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogLevel'
        '400':
          $ref: '#/components/responses/BadRequest'
  /config:
    get:
      tags:
        - common
      summary: Prints the TOML configuration file.
      operationId: get-config
      responses:
        '200':
          description: Successful Operation
          content:
            text/plain:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/BadRequest'
  /topology:
    get:
      tags:
        - common
      summary: Prints the contents of the AS topology file.
      operationId: get-topology
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topology'
        '400':
          $ref: '#/components/responses/BadRequest'
components:
  schemas:
    Signer:
      type: object
      properties:
        subject:
          type: object
          properties:
            isd_as:
              type: string
              example: '1-ff00:0:110'
        subject_key_id:
          type: string
          example: E0 EA 2C BC AF 1C E5 BF A7 D0 17 BD 93 85 36 08 28 DE FA E2
        expiration:
          type: string
          format: date-time
          example: 2022-01-04T09:59:33.000Z
        trc_id:
          type: object
          properties:
            isd:
              type: number
              example: 1
            base_number:
              type: number
              example: 1
            serial_number:
              type: number
              example: 1
        cert_validity:
          type: object
          properties:
            not_before:
              type: string
              format: date-time
              example: 2021-01-04T09:59:33.000Z
            not_after:
              type: string
              format: date-time
              example: 2022-01-04T09:59:33.000Z
        in_grace_period:
          type: boolean
          example: false
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
      required:
        - error
    CA:
      type: object
      properties:
        subject:
          type: object
          properties:
            isd_as:
              type: string
              example: '1-ff00:0:110'
        subject_key_id:
          type: string
          example: 5D A1 F7 17 F0 C1 35 0C 88 25 FA 61 D3 1D FE 91 8E F5 0F 7C
        policy:
          type: object
          properties:
            chain_lifetime:
              type: string
              example: 72h0m0s
        cert_validity:
          type: object
          properties:
            not_before:
              type: string
              format: date-time
              example: 2021-01-04T09:59:33.000Z
            not_after:
              type: string
              format: date-time
              example: 2023-01-04T09:59:33.000Z
    LogLevel:
      type: object
      properties:
        level:
          type: string
          example: info
          description: Logging level
          enum:
            - debug
            - info
            - error
      required:
        - level
    Topology:
      type: object
      additionalProperties: true
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
